/*
 * Jobs API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartrecruiters.api.job.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartrecruiters.api.job.model.Action;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * JobDetailsAllOfActions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-01T16:01:57.232855+01:00[Europe/Rome]")
public class JobDetailsAllOfActions {
  public static final String SERIALIZED_NAME_HIRING_TEAM = "hiringTeam";
  @SerializedName(SERIALIZED_NAME_HIRING_TEAM)
  private Action hiringTeam;

  public static final String SERIALIZED_NAME_PUBLICATIONS = "publications";
  @SerializedName(SERIALIZED_NAME_PUBLICATIONS)
  private Action publications;

  public static final String SERIALIZED_NAME_POSITIONS = "positions";
  @SerializedName(SERIALIZED_NAME_POSITIONS)
  private Action positions;

  public static final String SERIALIZED_NAME_APPLY_ON_WEB = "applyOnWeb";
  @SerializedName(SERIALIZED_NAME_APPLY_ON_WEB)
  private Action applyOnWeb;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private Action details;


  public JobDetailsAllOfActions hiringTeam(Action hiringTeam) {
    
    this.hiringTeam = hiringTeam;
    return this;
  }

   /**
   * Get hiringTeam
   * @return hiringTeam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Action getHiringTeam() {
    return hiringTeam;
  }



  public void setHiringTeam(Action hiringTeam) {
    this.hiringTeam = hiringTeam;
  }


  public JobDetailsAllOfActions publications(Action publications) {
    
    this.publications = publications;
    return this;
  }

   /**
   * Get publications
   * @return publications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Action getPublications() {
    return publications;
  }



  public void setPublications(Action publications) {
    this.publications = publications;
  }


  public JobDetailsAllOfActions positions(Action positions) {
    
    this.positions = positions;
    return this;
  }

   /**
   * Get positions
   * @return positions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Action getPositions() {
    return positions;
  }



  public void setPositions(Action positions) {
    this.positions = positions;
  }


  public JobDetailsAllOfActions applyOnWeb(Action applyOnWeb) {
    
    this.applyOnWeb = applyOnWeb;
    return this;
  }

   /**
   * Get applyOnWeb
   * @return applyOnWeb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Action getApplyOnWeb() {
    return applyOnWeb;
  }



  public void setApplyOnWeb(Action applyOnWeb) {
    this.applyOnWeb = applyOnWeb;
  }


  public JobDetailsAllOfActions details(Action details) {
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Action getDetails() {
    return details;
  }



  public void setDetails(Action details) {
    this.details = details;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDetailsAllOfActions jobDetailsAllOfActions = (JobDetailsAllOfActions) o;
    return Objects.equals(this.hiringTeam, jobDetailsAllOfActions.hiringTeam) &&
        Objects.equals(this.publications, jobDetailsAllOfActions.publications) &&
        Objects.equals(this.positions, jobDetailsAllOfActions.positions) &&
        Objects.equals(this.applyOnWeb, jobDetailsAllOfActions.applyOnWeb) &&
        Objects.equals(this.details, jobDetailsAllOfActions.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hiringTeam, publications, positions, applyOnWeb, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDetailsAllOfActions {\n");
    sb.append("    hiringTeam: ").append(toIndentedString(hiringTeam)).append("\n");
    sb.append("    publications: ").append(toIndentedString(publications)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    applyOnWeb: ").append(toIndentedString(applyOnWeb)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

