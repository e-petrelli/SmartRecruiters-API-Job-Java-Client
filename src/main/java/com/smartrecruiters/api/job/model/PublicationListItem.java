/*
 * Jobs API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartrecruiters.api.job.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * PublicationListItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-01T16:01:57.232855+01:00[Europe/Rome]")
public class PublicationListItem {
  public static final String SERIALIZED_NAME_SOURCE_NAME = "sourceName";
  @SerializedName(SERIALIZED_NAME_SOURCE_NAME)
  private String sourceName;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_PUBLISHED_ON = "publishedOn";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_ON)
  private OffsetDateTime publishedOn;

  public static final String SERIALIZED_NAME_UNPUBLISHED_ON = "unpublishedOn";
  @SerializedName(SERIALIZED_NAME_UNPUBLISHED_ON)
  private OffsetDateTime unpublishedOn;


  public PublicationListItem sourceName(String sourceName) {
    
    this.sourceName = sourceName;
    return this;
  }

   /**
   * Get sourceName
   * @return sourceName
  **/
  @ApiModelProperty(required = true, value = "")

  public String getSourceName() {
    return sourceName;
  }



  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }


  public PublicationListItem type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public String getType() {
    return type;
  }



  public void setType(String type) {
    this.type = type;
  }


  public PublicationListItem publishedOn(OffsetDateTime publishedOn) {
    
    this.publishedOn = publishedOn;
    return this;
  }

   /**
   * Get publishedOn
   * @return publishedOn
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getPublishedOn() {
    return publishedOn;
  }



  public void setPublishedOn(OffsetDateTime publishedOn) {
    this.publishedOn = publishedOn;
  }


  public PublicationListItem unpublishedOn(OffsetDateTime unpublishedOn) {
    
    this.unpublishedOn = unpublishedOn;
    return this;
  }

   /**
   * Get unpublishedOn
   * @return unpublishedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUnpublishedOn() {
    return unpublishedOn;
  }



  public void setUnpublishedOn(OffsetDateTime unpublishedOn) {
    this.unpublishedOn = unpublishedOn;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicationListItem publicationListItem = (PublicationListItem) o;
    return Objects.equals(this.sourceName, publicationListItem.sourceName) &&
        Objects.equals(this.type, publicationListItem.type) &&
        Objects.equals(this.publishedOn, publicationListItem.publishedOn) &&
        Objects.equals(this.unpublishedOn, publicationListItem.unpublishedOn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceName, type, publishedOn, unpublishedOn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicationListItem {\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    publishedOn: ").append(toIndentedString(publishedOn)).append("\n");
    sb.append("    unpublishedOn: ").append(toIndentedString(unpublishedOn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

